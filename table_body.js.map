{"version":3,"file":"table_body.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/table_body/index.js"],"sourcesContent":["import metastanza from \"@/lib/metastanza_utils.js\";\n\nexport default async function tableBody(stanza, params) {\n  stanza.render({\n    template: \"stanza.html.hbs\",\n  });\n\n  const formBody = [];\n  for (const key in params) {\n    if (params[key] && key !== \"table_data_api\") {\n      formBody.push(key + \"=\" + encodeURIComponent(params[key]));\n    }\n  }\n\n  const api = params.table_data_api;\n  const element = stanza.root.querySelector(\"#renderDiv\");\n  const dataset = await metastanza.getFormatedJson(\n    api,\n    element,\n    formBody.join(\"&\")\n  );\n  if (typeof dataset === \"object\") {\n    draw(dataset, stanza, element);\n  }\n}\n\nfunction draw(dataset, stanza, element) {\n  const table = document.createElement(\"table\");\n  const thead = document.createElement(\"thead\");\n  const tbody = document.createElement(\"tbody\");\n  element.appendChild(table);\n  table.appendChild(thead);\n  table.appendChild(tbody);\n\n  let order = [];\n  if (dataset.head.order) {\n    for (let i = 0; i < dataset.head.order.length; i++) {\n      if (parseInt(dataset.head.order[i]) >= 0) {\n        order[parseInt(dataset.head.order[i])] = i;\n      }\n    }\n  } else {\n    order = [...Array(dataset.head.vars.length).keys()];\n  }\n\n  let tr = document.createElement(\"tr\");\n  thead.appendChild(tr);\n  for (const i of order) {\n    const th = document.createElement(\"th\");\n    let label = dataset.head.vars[i];\n    if (dataset.head.labels) {\n      label = dataset.head.labels[i];\n    }\n    th.innerHTML = label;\n    tr.appendChild(th);\n  }\n  for (const row of dataset.body) {\n    tr = document.createElement(\"tr\");\n    tbody.appendChild(tr);\n    for (const j of order) {\n      const td = document.createElement(\"td\");\n      if (dataset.head.href[j]) {\n        const a = document.createElement(\"a\");\n        a.setAttribute(\"href\", row[dataset.head.href[j]].value);\n        a.innerHTML = row[dataset.head.vars[j]].value;\n        td.appendChild(a);\n      } else {\n        td.innerHTML = row[dataset.head.vars[j]].value;\n      }\n      tr.appendChild(td);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}