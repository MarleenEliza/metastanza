{"version":3,"file":"tree.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/tree/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\nimport loadData from \"@/lib/load-data\";\nimport { appendDlButton } from \"@/lib/metastanza_utils.js\";\n\nexport default async function tree(stanza, params) {\n  function css(key) {\n    return getComputedStyle(stanza.root.host).getPropertyValue(key);\n  }\n\n  const vegaJson = await fetch(\n    \"https://vega.github.io/vega/examples/tree-layout.vg.json\"\n  ).then((res) => res.json());\n\n  //width,height,padding\n  const width = Number(params[\"width\"]);\n  const height = Number(params[\"height\"]);\n  const padding = Number(params[\"padding\"]);\n\n  //data\n  const labelVariable = params[\"label-variable\"]; //\"name\"\n  const parentVariable = params[\"parent-variable\"]; //\"parent\"\n  const idVariable = params[\"id-variable\"]; //\"id-variable\"\n\n  const values = await loadData(params[\"data-url\"], params[\"data-type\"]);\n\n  const data = [\n    {\n      name: \"tree\",\n      values,\n      transform: [\n        {\n          type: \"stratify\",\n          key: idVariable,\n          parentKey: parentVariable,\n        },\n        {\n          type: \"tree\",\n          method: { signal: \"layout\" },\n          size: [{ signal: \"height\" }, { signal: \"width - 100\" }],\n          separation: { signal: \"separation\" },\n          as: [\"y\", \"x\", \"depth\", \"children\"],\n        },\n      ],\n    },\n    {\n      name: \"links\",\n      source: \"tree\",\n      transform: [\n        { type: \"treelinks\" },\n        {\n          type: \"linkpath\",\n          orient: \"horizontal\",\n          shape: { signal: \"links\" },\n        },\n      ],\n    },\n  ];\n\n  //scales\n  const scales = [\n    {\n      name: \"color\",\n      type: \"ordinal\",\n      range: [\n        \"var(--series-0-color)\",\n        \"var(--series-1-color)\",\n        \"var(--series-2-color)\",\n        \"var(--series-3-color)\",\n        \"var(--series-4-color)\",\n        \"var(--series-5-color)\",\n      ],\n      domain: { data: \"tree\", field: \"depth\" },\n      zero: true,\n    },\n  ];\n\n  //legend\n  const legends = [\n    {\n      fill: \"color\",\n      title: params[\"legend-title\"],\n      titleColor: \"var(--legendtitle-color)\",\n      labelColor: \"var(--legendlabel-color)\",\n      orient: \"top-left\",\n      encode: {\n        title: {\n          update: {\n            font: { value: css(\"--legend-font\") },\n            fontSize: { value: css(\"--legendtitle-size\") },\n            fontWeight: { value: css(\"--legendtitle-weight\") },\n          },\n        },\n        labels: {\n          interactive: true,\n          update: {\n            font: { value: css(\"--legend-font\") },\n            fontSize: { value: css(\"--legendlabel-size\") },\n          },\n          text: { field: \"value\" },\n        },\n        symbols: {\n          update: {\n            shape: { value: params[\"symbol-shape\"] },\n            stroke: { value: \"var(--stroke-color)\" },\n            strokeWidth: { value: css(\"--stroke-width\") },\n          },\n        },\n      },\n    },\n  ];\n\n  //marks\n  const marks = [\n    {\n      type: \"path\",\n      from: { data: \"links\" },\n      encode: {\n        update: {\n          path: { field: \"path\" },\n          stroke: { value: \"var(--branch-color)\" },\n        },\n      },\n    },\n    {\n      type: \"symbol\",\n      from: { data: \"tree\" },\n      encode: {\n        enter: {\n          size: {\n            value: css(\"--node-size\"),\n          },\n          stroke: { value: \"var(--stroke-color)\" },\n        },\n        update: {\n          x: { field: \"x\" },\n          y: { field: \"y\" },\n          fill: { scale: \"color\", field: \"depth\" },\n          stroke: { value: \"var(--stroke-color)\" },\n          strokeWidth: { value: css(\"--stroke-width\") },\n        },\n      },\n    },\n    {\n      type: \"text\",\n      from: { data: \"tree\" },\n      encode: {\n        enter: {\n          text: { field: labelVariable },\n          font: { value: css(\"--font-family\") },\n          fontSize: { value: css(\"--label-size\") },\n          baseline: { value: \"middle\" },\n        },\n        update: {\n          x: { field: \"x\" },\n          y: { field: \"y\" },\n          dx: { signal: \"datum.children ? -7 : 7\" },\n          align: { signal: \"datum.children ? 'right' : 'left'\" },\n          opacity: { signal: \"labels ? 1 : 0\" },\n          fill: { value: \"var(--label-color)\" },\n        },\n      },\n    },\n  ];\n\n  const spec = {\n    $schema: \"https://vega.github.io/schema/vega/v5.json\",\n    width,\n    height,\n    padding,\n    signals: vegaJson.signals,\n    data,\n    scales,\n    legends,\n    marks,\n  };\n\n  //delete default controller\n  for (const signal of vegaJson.signals) {\n    delete signal.bind;\n  }\n\n  const el = stanza.root.querySelector(\"main\");\n  const opts = {\n    renderer: \"svg\",\n  };\n  await vegaEmbed(el, spec, opts);\n\n  //menu button placement\n  appendDlButton(\n    stanza.root.querySelector(\".chart-wrapper\"),\n    stanza.root.querySelector(\"svg\"),\n    \"threevariable-scatter-plot\",\n    stanza\n  );\n\n  const menuButton = stanza.root.querySelector(\"#dl_button\");\n  switch (params[\"menu-button-placement\"]) {\n    case \"top-left\":\n      menuButton.setAttribute(\"class\", \"dl-top-left\");\n      break;\n    case \"top-right\":\n      menuButton.setAttribute(\"class\", \"dl-top-right\");\n      break;\n    case \"bottom-left\":\n      menuButton.setAttribute(\"class\", \"dl-bottom-left\");\n      break;\n    case \"bottom-right\":\n      menuButton.setAttribute(\"class\", \"dl-bottom-right\");\n      break;\n    case \"none\":\n      menuButton.setAttribute(\"class\", \"dl-none\");\n      break;\n  }\n}\n"],"names":["vegaEmbed"],"mappings":"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"}