{"version":3,"file":"gwas-manhattan-plot.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/gwas-manhattan-plot/index.js"],"sourcesContent":["import * as d3 from \"d3\";\nimport { appendDlButton } from \"@/lib/metastanza_utils.js\";\nimport data from \"../gwas-manhattan-plot/gwas.var2.json\";\n\n// study name(single per a json)\nconst dataset = data.dataset;\nconst study_name = Object.keys(dataset)[0];\n\n//project data and project names(single per a json)\nconst project = Object.values(dataset)[0][0];\nconst project_name = Object.keys(project)[0];\n\n// stage data and stage names\nconst stages = Object.values(project);\nconsole.log(\"【stages】\", stages);\n\nconst stage_info = stages[0];\n\nconst stage_names = Object.keys(stage_info);\nconsole.log(\"【stage_names】\", stage_names);\n\n// get condition of each stage\nconst condition1 = stage_info[stage_names[0]].condition1;\nconst condition2 = stage_info[stage_names[0]].condition2;\n\nlet total_variants = [];\nstage_names.forEach(\n  (stage) =>\n    (total_variants = total_variants.concat(stage_info[stage].variants))\n);\nconsole.log(\"total_variants\", total_variants);\n\n// get stage information\nconst getVariants = () => {\n  let variantsArray = [];\n  stage_names.forEach((stage) => {\n    if (stage_info[stage].checked) {\n      variantsArray = variantsArray.concat(stage_info[stage].variants);\n    }\n  });\n  return variantsArray;\n};\nlet variants = total_variants; //init\n\nexport default async function gwasManhattanPlot(stanza, params) {\n  stanza.render({\n    template: \"stanza.html.hbs\",\n    parameters: {\n      greeting: `Hello, ${params[\"say-to\"]}!`,\n      title: params[\"title\"],\n      study_name,\n      project_name,\n      condition1,\n      condition2,\n    },\n  });\n\n  //append checkbox to filter stages\n  const stageList = stanza.root.querySelector(\"#stageList\");\n  let li;\n  let input;\n  let label;\n\n  for (let i = 0; i < stage_names.length; i++) {\n    li = document.createElement(\"li\");\n    input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"checkbox\");\n    input.setAttribute(\"class\", \"stage-btn\");\n    input.setAttribute(\"name\", \"stage\");\n    input.setAttribute(\"value\", stage_names[i]);\n    input.setAttribute(\"checked\", true);\n    input.setAttribute(\"data-stage\", stage_names[i]);\n    label = document.createElement(\"label\");\n    label.textContent = stage_names[i];\n    stageList.appendChild(li);\n    li.appendChild(input);\n    li.appendChild(label);\n    stage_info[stage_names[i]].checked = true;\n  }\n\n  console.log(\"stage_info\", stage_info);\n\n  // adjust datas\n  for (let i = 0; i < variants.length; i++) {\n    // convert chromosome data from 'chrnum' to 'num'\n    let chr = variants[i].chr;\n    chr = chr.replace(\"chr\", \"\");\n    variants[i].chr = chr;\n    // console.log(variants[i].chr);\n\n    const pval = variants[i][\"p-value\"];\n    String(pval);\n\n    const physical_pos = variants[i][\"stop\"];\n    String(physical_pos);\n  }\n\n  // console.log(params.api); //when you put json url\n  // const dataset = await getFormatedJson(\n  //   params.api,\n  //   stanza.root.querySelector(\"#chart\")\n  // );\n  // console.log(\"dataset\", dataset);\n  // console.log(\"variants\", variants);\n\n  if (typeof variants === \"object\") {\n    draw(stanza, params);\n    appendDlButton(\n      stanza.root.querySelector(\"#chart\"),\n      stanza.root.querySelector(\"svg\"),\n      \"manhattan_plot\",\n      stanza\n    );\n  }\n}\n\nasync function draw(stanza, params) {\n  const width = 800;\n  const height = 400;\n  const marginLeft = 40;\n  const marginBottom = 30;\n  const areaWidth = width - marginLeft;\n  const areaHeight = height - marginBottom;\n\n  const chart_element = stanza.root.querySelector(\"#chart\");\n  const control_element = stanza.root.querySelector(\"#control\");\n  let over_thresh_array;\n\n  if (params.low_thresh === \"\") {\n    params.low_thresh = 0.5;\n  }\n  if (params.high_thresh === \"\") {\n    params.high_thresh = Infinity;\n  }\n  if (params.chromosome_key === \"\") {\n    params.chromosome_key = \"chromosome\";\n  }\n  if (params.position_key === \"\") {\n    params.position_key = \"position\";\n  }\n  if (params.p_value_key === \"\") {\n    params.p_value__key = \"p-value\";\n  }\n  if (params.label_key === \"\") {\n    params.label_key = \"label\";\n  }\n  const low_thresh = parseFloat(params.low_thresh);\n  // let high_thresh = parseFloat(params.high_thresh);\n  let high_thresh = parseFloat(params.high_thresh);\n  const threshold = stanza.root.querySelector(\"#threshold\");\n  threshold.addEventListener(\"input\", function () {\n    high_thresh = parseFloat(threshold.value);\n    reRender();\n  });\n  const even_and_odd = params.even_and_odd === \"true\";\n  const chromosome_key = params.chromosome_key;\n  const position_key = params.position_key;\n  const p_value_key = params.p_value_key;\n  const label_key = params.label_key;\n\n  console.log(label_key);\n  // console.log(variants[0].rsId);\n\n  const chromosomes = [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"X\",\n    \"Y\",\n  ];\n\n  const chromosomeNtLength = {\n    hg38: {\n      1: 248956422,\n      2: 242193529,\n      3: 198295559,\n      4: 190214555,\n      5: 181538259,\n      6: 170805979,\n      7: 159345973,\n      8: 145138636,\n      9: 138394717,\n      10: 133797422,\n      11: 135086622,\n      12: 133275309,\n      13: 114364328,\n      14: 107043718,\n      15: 101991189,\n      16: 90338345,\n      17: 83257441,\n      18: 80373285,\n      19: 58617616,\n      20: 64444167,\n      21: 46709983,\n      22: 50818468,\n      X: 156040895,\n      Y: 57227415,\n    },\n  };\n\n  const canvas_div = d3\n    .select(chart_element)\n    .append(\"div\")\n    .style(\"width\", areaWidth + \"px\")\n    .style(\"overflow\", \"hidden\")\n    .style(\"position\", \"absolute\")\n    .style(\"left\", marginLeft + \"px\");\n  const canvas = canvas_div\n    .append(\"canvas\")\n    .attr(\"width\", areaWidth)\n    .attr(\"height\", areaHeight)\n    .style(\"position\", \"relative\");\n  const svg = d3\n    .select(chart_element)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  const plot_g = svg.append(\"g\").attr(\"id\", \"plot_group\");\n  const axis_g = svg.append(\"g\").attr(\"id\", \"axis\");\n  const threshline_g = svg.append(\"g\").attr(\"id\", \"thresh_line\");\n  const xlabel_g = svg.append(\"g\").attr(\"id\", \"x_label\");\n  const ylabel_g = svg.append(\"g\").attr(\"id\", \"y_label\");\n  const ytitle = svg.append(\"g\").attr(\"id\", \"y_title\");\n\n  let range = []; // [begin position, end _position]\n  let rangeVertical = []; // [begin position, end _position]\n  let max_log_p = 0;\n  let max_log_p_int;\n  let total;\n\n  // axis line\n  axis_g\n    .append(\"path\")\n    .attr(\"d\", \"M \" + marginLeft + \", \" + areaHeight + \" H \" + width + \" Z\")\n    .attr(\"class\", \"axis-line\");\n  axis_g\n    .append(\"path\")\n    .attr(\"d\", \"M \" + marginLeft + \", 0 V \" + areaHeight + \" Z\")\n    .attr(\"class\", \"axis-line\");\n\n  // select range by drag\n  let dragBegin = false;\n  let dragBeginVertical = false;\n  console.log(\"rangeVertical\", rangeVertical);\n\n  svg\n    .on(\"mousedown\", function (e) {\n      if (d3.pointer(e)[1] <= areaHeight) {\n        dragBegin = d3.pointer(e)[0];\n        dragBeginVertical = d3.pointer(e)[1] <= 60 ? 60 : d3.pointer(e)[1];\n        console.log(\"mousedown(start) dragBeginVertical\", dragBeginVertical);\n        console.log(\"mousedown(start) dragBegin\", dragBegin);\n        console.log(\"mousedown(start) d3.pointer(e)\", d3.pointer(e));\n        svg\n          .append(\"rect\")\n          .attr(\"fill\", \"rgba(128, 128, 128, 0.2)\")\n          .attr(\"stroke\", \"black\")\n          .attr(\"x\", dragBegin)\n          .attr(\"y\", dragBeginVertical)\n          .attr(\"width\", 0)\n          .attr(\"height\", 0)\n          .attr(\"id\", \"selector\");\n      }\n    })\n    .on(\"mousemove\", function (e) {\n      if (dragBegin) {\n        const dragEnd = d3.pointer(e)[0];\n        if (dragBegin < dragEnd) {\n          svg.select(\"#selector\").attr(\"width\", dragEnd - dragBegin);\n        } else {\n          svg\n            .select(\"#selector\")\n            .attr(\"x\", dragEnd)\n            .attr(\"width\", dragBegin - dragEnd);\n        }\n      }\n      if (dragBeginVertical) {\n        const dragEndVertical =\n          d3.pointer(e)[1] > areaHeight ? areaHeight : d3.pointer(e)[1];\n        if (dragBeginVertical < dragEndVertical) {\n          svg\n            .select(\"#selector\")\n            .attr(\"height\", dragEndVertical - dragBeginVertical);\n        } else {\n          svg\n            .select(\"#selector\")\n            .attr(\"y\", dragEndVertical)\n            .attr(\"height\", dragBeginVertical - dragEndVertical);\n        }\n      }\n    })\n    .on(\"mouseup\", function (e) {\n      if (dragBegin) {\n        const dragEnd = d3.pointer(e)[0];\n        // re-render\n        if (5 > dragEnd - dragBegin) {\n          range = [\n            ((dragEnd - marginLeft) / areaWidth) * (range[1] - range[0]) +\n              range[0],\n            ((dragBegin - marginLeft) / areaWidth) * (range[1] - range[0]) +\n              range[0],\n          ];\n        } else if (dragEnd - dragBegin > 5) {\n          range = [\n            ((dragBegin - marginLeft) / areaWidth) * (range[1] - range[0]) +\n              range[0],\n            ((dragEnd - marginLeft) / areaWidth) * (range[1] - range[0]) +\n              range[0],\n          ];\n        }\n        svg.select(\"#selector\").remove();\n        reRender();\n        dragBegin = false;\n      }\n      if (dragBeginVertical) {\n        const dragEndVertical = d3.pointer(e)[1] > 370 ? 370 : d3.pointer(e)[1]; //一時的\n        // re-render\n        const rangeVerticalLength = rangeVertical[1] - rangeVertical[0];\n        if (0 > dragEndVertical - dragBeginVertical) {\n          const maxLog =\n            rangeVertical[1] -\n            ((dragEndVertical - 60) / 310) * rangeVerticalLength;\n          const minLog =\n            rangeVertical[1] -\n            ((dragBeginVertical - 60) / 310) * rangeVerticalLength;\n          rangeVertical = [minLog, maxLog];\n        } else if (dragEndVertical - dragBeginVertical > 0) {\n          const maxLog =\n            rangeVertical[1] -\n            ((dragBeginVertical - 60) / 310) * rangeVerticalLength;\n          const minLog =\n            rangeVertical[1] -\n            ((dragEndVertical - 60) / 310) * rangeVerticalLength;\n          rangeVertical = [minLog, maxLog];\n        }\n        reRender();\n        svg.select(\"#selector\").remove();\n        dragBegin = false;\n        dragBeginVertical = false;\n      }\n    });\n\n  // slider\n  const ctrl_svg = d3\n    .select(control_element)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", 20);\n  ctrl_svg\n    .append(\"path\")\n    .attr(\"d\", \"M \" + marginLeft + \", 10 H \" + width + \" Z\")\n    .attr(\"stroke\", \"#888888\")\n    .attr(\"stroke-width\", \"2px\");\n  ctrl_svg\n    .append(\"rect\")\n    .attr(\"id\", \"slider\")\n    .attr(\"x\", marginLeft)\n    .attr(\"y\", 2)\n    .attr(\"width\", areaWidth)\n    .attr(\"height\", 16)\n    .attr(\"fill\", \"#C2E3F2\")\n    .call(\n      d3\n        .drag()\n        .on(\"start\", function (e) {\n          dragBegin = e.x;\n        })\n        .on(\"drag\", function (e) {\n          if (dragBegin) {\n            const slider = ctrl_svg.select(\"rect#slider\");\n            let delta = e.x - dragBegin;\n            if (parseFloat(slider.attr(\"x\")) + delta < marginLeft) {\n              delta = (parseFloat(slider.attr(\"x\")) - marginLeft) * -1;\n            } else if (\n              parseFloat(slider.attr(\"x\")) +\n                parseFloat(slider.attr(\"width\")) +\n                delta >\n              width\n            ) {\n              delta =\n                width -\n                (parseFloat(slider.attr(\"x\")) +\n                  parseFloat(slider.attr(\"width\")));\n            }\n            slider.attr(\"transform\", \"translate(\" + delta + \", 0)\");\n            const move = (delta / areaWidth) * total;\n            // renderCanvas([range[0] + move, range[1] + move]);\n            canvas\n              .style(\n                \"left\",\n                ((range[0] + move) / (range[0] - range[1])) * areaWidth + \"px\"\n              )\n              .style(\"display\", \"block\");\n            setRange([range[0] + move, range[1] + move]);\n            plot_g.html(\"\");\n            xlabel_g.html(\"\");\n          }\n        })\n        .on(\"end\", function (e) {\n          if (dragBegin) {\n            // re-render\n            const slider = ctrl_svg.select(\"rect#slider\");\n            let delta = e.x - dragBegin;\n            if (parseFloat(slider.attr(\"x\")) + delta < marginLeft) {\n              delta = (parseFloat(slider.attr(\"x\")) - marginLeft) * -1;\n            } else if (\n              parseFloat(slider.attr(\"x\")) +\n                parseFloat(slider.attr(\"width\")) +\n                delta >\n              width\n            ) {\n              delta =\n                width -\n                (parseFloat(slider.attr(\"x\")) +\n                  parseFloat(slider.attr(\"width\")));\n            }\n            const move = (delta / areaWidth) * total;\n            range = [range[0] + move, range[1] + move];\n            reRender();\n            dragBegin = false;\n          }\n        })\n    );\n\n  // button\n  const ctrl_button = d3\n    .select(control_element)\n    .append(\"div\")\n    .attr(\"id\", \"ctrl_button\");\n  ctrl_button\n    .append(\"input\")\n    .attr(\"type\", \"button\")\n    .attr(\"value\", \"-\")\n    .on(\"click\", function () {\n      let begin = range[0] - (range[1] - range[0]) / 2;\n      let end = range[1] + (range[1] - range[0]) / 2;\n      if (begin < 0) {\n        begin = 0;\n        end = (range[1] - range[0]) * 2;\n        if (end > total) {\n          end = total;\n        }\n      } else if (end > total) {\n        end = total;\n        begin = total - (range[1] - range[0]) * 2;\n        if (begin < 0) {\n          begin - 0;\n        }\n      }\n      range = [begin, end];\n      reRender();\n    });\n  ctrl_button\n    .append(\"input\")\n    .attr(\"type\", \"button\")\n    .attr(\"value\", \"+\")\n    .on(\"click\", function () {\n      const begin = range[0] + (range[1] - range[0]) / 4;\n      const end = range[1] - (range[1] - range[0]) / 4;\n      range = [begin, end];\n      reRender();\n    });\n  ctrl_button.append(\"span\").attr(\"id\", \"range_text\");\n  ctrl_button\n    .append(\"input\")\n    .attr(\"type\", \"button\")\n    .attr(\"value\", \"reset\")\n    .on(\"click\", function () {\n      range = [];\n      rangeVertical = [];\n      reRender();\n    });\n\n  reRender();\n\n  //listen stage checkbox event\n  const stageBtn = stanza.root.querySelectorAll(\".stage-btn\");\n  console.log(\"stageBtn\", stageBtn);\n  for (let i = 0; i < stageBtn.length; i++) {\n    stageBtn[i].addEventListener(\"change\", (e) => {\n      console.log(\"CLICKED\");\n      const stageName = e.path[0].getAttribute(\"data-stage\");\n      stage_info[stageName].checked = stageBtn[i].checked;\n      variants = getVariants();\n      reRender();\n    });\n  }\n\n  function reRender() {\n    console.log(\"variants.length\", variants.length);\n    if (range[0] === undefined) {\n      range = [\n        0,\n        Object.values(chromosomeNtLength.hg38).reduce(\n          (sum, value) => sum + value\n        ),\n      ];\n      total = range[1];\n    }\n\n    over_thresh_array = [];\n\n    const p_value_array = variants.map(\n      (variant) => Math.log10(parseFloat(variant[\"p-value\"])) * -1\n    );\n    max_log_p = Math.max(...p_value_array);\n\n    if (max_log_p_int === undefined) {\n      max_log_p_int = Math.floor(max_log_p);\n    }\n\n    if (rangeVertical[0] === undefined) {\n      rangeVertical = [low_thresh, max_log_p_int];\n    }\n\n    plot_g.html(\"\");\n    xlabel_g.html(\"\");\n    ylabel_g.html(\"\");\n    plot_g\n      .selectAll(\".plot\")\n      .data(variants)\n      .enter()\n      // filter: display range\n      .filter(function (d) {\n        if (!d.pos) {\n          // calculate  accumulated position\n          let pos = 0;\n          for (const ch of chromosomes) {\n            if (ch === d[chromosome_key]) {\n              break;\n            }\n            pos += chromosomeNtLength.hg38[ch];\n          }\n          d.pos = pos + parseInt(d[position_key]);\n        }\n        const logValue = Math.log10(parseFloat(d[p_value_key])) * -1;\n        return (\n          range[0] <= d.pos &&\n          d.pos <= range[1] &&\n          rangeVertical[0] <= logValue &&\n          logValue <= rangeVertical[1]\n        );\n      })\n      .filter(function (d) {\n        return Math.log10(parseFloat(d[p_value_key])) * -1 > low_thresh;\n      })\n      .append(\"circle\")\n      .attr(\"class\", function (d) {\n        if (even_and_odd) {\n          let tmp = \"even\";\n          if (\n            d[chromosome_key] === \"X\" ||\n            parseInt(d[chromosome_key]) % 2 === 1\n          ) {\n            tmp = \"odd\";\n          }\n          return \"plot ch_\" + tmp;\n        }\n        return \"plot ch_\" + d[chromosome_key];\n      })\n      .attr(\"cx\", function (d) {\n        return (\n          ((d.pos - range[0]) / (range[1] - range[0])) * areaWidth + marginLeft\n        );\n      })\n      .attr(\"cy\", function (d) {\n        const logValue = Math.log10(parseFloat(d[p_value_key])) * -1;\n        return (\n          ((rangeVertical[1] - logValue) /\n            (rangeVertical[1] - rangeVertical[0])) *\n            310 +\n          60\n        );\n      })\n      .attr(\"r\", 2)\n      // filter: high p-value\n      .filter(function (d) {\n        if (Math.log10(parseFloat(d[p_value_key])) * -1 > high_thresh) {\n          over_thresh_array.push(d);\n        }\n        return Math.log10(parseFloat(d[p_value_key])) * -1 > high_thresh;\n      })\n      .classed(\"over-thresh-plot\", true)\n      .on(\"mouseover\", function (e, d) {\n        svg\n          .append(\"text\")\n          .text(d[label_key]) //.text(d.dbSNP_RS_ID + \", \" + d.Symbol)\n          .attr(\"x\", d3.pointer(e)[0] + 10)\n          .attr(\"y\", d3.pointer(e)[1])\n          .attr(\"id\", \"popup_text\");\n      })\n      .on(\"mouseout\", function () {\n        svg.select(\"#popup_text\").remove();\n      });\n    // plot_g.selectAll(\".plot\").attr(\"cy\", function (d) {\n    //   return (\n    //     areaHeight - ((Math.log10(parseFloat(d[p_value_key])) * -1 - low_thresh) * areaHeight) / max_log_p_int\n    //   );\n    // });\n\n    renderCanvas(variants, range);\n\n    // x axis label\n    xlabel_g\n      .selectAll(\".xLabel\")\n      .data(chromosomes)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"axisLabel xLabel\")\n      .text(function (d) {\n        return d;\n      })\n      .attr(\"x\", function (d) {\n        let pos = chromosomeNtLength.hg38[d] / 2;\n        for (const ch of chromosomes) {\n          if (ch === d) {\n            break;\n          }\n          pos += chromosomeNtLength.hg38[ch];\n        }\n        return (\n          ((pos - range[0]) / (range[1] - range[0])) * areaWidth + marginLeft\n        );\n      })\n      .attr(\"y\", areaHeight + 20);\n\n    // y axis label\n    const overThreshLine = stanza.root.querySelectorAll(\".overthresh-line\");\n\n    for (\n      let i = Math.floor(rangeVertical[0]) + 1;\n      i <= Math.ceil(rangeVertical[1]);\n      i++\n    ) {\n      const y =\n        areaHeight -\n        ((i - rangeVertical[0]) / (rangeVertical[1] - rangeVertical[0])) *\n          (areaHeight - 60); //一時的に\n      // const y = areaHeight - ((i - rangeVertical[0]) * areaHeight) / rangeVertical[1];\n      if (rangeVertical[1] - rangeVertical[0] < 30) {\n        ylabel_g\n          .append(\"text\")\n          .text(i)\n          .attr(\"class\", \"axisLabel yLabel\")\n          .attr(\"x\", marginLeft - 12)\n          .attr(\"y\", y)\n          .attr(\"text-anchor\", \"end\");\n      } else if (i % 2 === 0) {\n        ylabel_g\n          .append(\"text\")\n          .text(i)\n          .attr(\"class\", \"axisLabel yLabel\")\n          .attr(\"x\", marginLeft - 12)\n          .attr(\"y\", y)\n          .attr(\"text-anchor\", \"end\");\n      }\n      ylabel_g\n        .append(\"path\")\n        .attr(\"class\", \"axis-line\")\n        .attr(\n          \"d\",\n          \"M \" + (marginLeft - 6) + \", \" + y + \" H \" + marginLeft + \" Z\"\n        );\n      if (i === high_thresh) {\n        threshline_g\n          .append(\"path\")\n          .attr(\"d\", \"M \" + marginLeft + \", \" + y + \" H \" + width + \" Z\")\n          .attr(\"class\", \"overthresh-line\");\n      }\n    }\n    for (let i = 0; i < overThreshLine.length; i++) {\n      overThreshLine[i].remove();\n    }\n\n    ytitle\n      .append(\"text\")\n      .text(\"-log₁₀(p-value)\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"x\", -areaHeight / 2)\n      .attr(\"y\", marginLeft - 32)\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"text-anchor\", \"middle\");\n\n    // y zero (low_thresh)\n    ylabel_g\n      .append(\"text\")\n      .text(Math.floor(rangeVertical[0]))\n      .attr(\"class\", \"axisLabel yLabel\")\n      .attr(\"x\", marginLeft - 12)\n      .attr(\"y\", areaHeight)\n      .attr(\"text-anchor\", \"end\");\n    ylabel_g\n      .append(\"path\")\n      .attr(\"class\", \"axis-line\")\n      .attr(\n        \"d\",\n        \"M \" + (marginLeft - 8) + \", \" + areaHeight + \" H \" + marginLeft + \" Z\"\n      );\n\n    // slider\n    ctrl_svg\n      .select(\"rect#slider\")\n      .attr(\"x\", marginLeft + (range[0] / total) * areaWidth)\n      .attr(\"width\", ((range[1] - range[0]) / total) * areaWidth)\n      .attr(\"transform\", \"translate(0, 0)\");\n\n    setRange(range);\n    // overThreshLine.remove();\n  }\n\n  function renderCanvas(variants, rangeVertical) {\n    if (canvas.node().getContext) {\n      canvas.attr(\"width\", (total / (range[1] - range[0])) * areaWidth);\n      canvas.attr(\n        \"height\",\n        (total / (rangeVertical[1] - rangeVertical[0])) * areaHeight\n      );\n      const ctx = canvas.node().getContext(\"2d\");\n      ctx.clearRect(0, 0, areaWidth, areaHeight);\n      for (const d of variants) {\n        ctx.beginPath();\n        if (Math.log10(parseFloat(d[p_value_key])) * -1 > high_thresh) {\n          ctx.fillStyle = getComputedStyle(stanza.root.host).getPropertyValue(\n            \"--over-thresh-color\"\n          );\n        } else if (even_and_odd) {\n          let tmp = \"even\";\n          if (\n            d[chromosome_key] === \"X\" ||\n            parseInt(d[chromosome_key]) % 2 === 1\n          ) {\n            tmp = \"odd\";\n          }\n          ctx.fillStyle = getComputedStyle(stanza.root.host).getPropertyValue(\n            \"--ch-\" + tmp + \"-color\"\n          );\n        } else {\n          ctx.fillStyle = getComputedStyle(stanza.root.host).getPropertyValue(\n            \"--ch-\" + d[chromosome_key] + \"-color\"\n          );\n        }\n        ctx.arc(\n          (d.pos / (range[1] - range[0])) * areaWidth,\n          areaHeight -\n            ((Math.log10(parseFloat(d[p_value_key])) * -1 - low_thresh) *\n              areaHeight) /\n              max_log_p_int,\n          2,\n          0,\n          Math.PI * 2\n        );\n        ctx.fill();\n      }\n      canvas.style(\n        \"left\",\n        (range[0] / (range[0] - range[1])) * areaWidth + \"px\"\n      );\n    }\n    canvas.style(\"display\", \"none\");\n\n    stanza.render({\n      template: \"table.html.hbs\",\n      selector: \"#table\",\n      parameters: {\n        arrays: over_thresh_array,\n      },\n    });\n  }\n\n  function setRange(range) {\n    let start = 0;\n    let text = \"\";\n    for (const ch of chromosomes) {\n      if (start + chromosomeNtLength.hg38[ch] >= range[0] && !text) {\n        text += \" Ch.\" + ch + \":\" + Math.floor(range[0]);\n      }\n      if (start + chromosomeNtLength.hg38[ch] >= range[1]) {\n        text += \" - Ch.\" + ch + \":\" + Math.floor(range[1] - start);\n        break;\n      }\n      start += chromosomeNtLength.hg38[ch];\n      // console.log(start + chromosomeNtLength.hg38[ch]);\n    }\n    ctrl_button.select(\"#range_text\").html(text);\n  }\n}\n"],"names":["dataset","d3\n    .select","d3.pointer","d3\n        .drag"],"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}