{"version":3,"file":"column-tree.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/NodeColumn.vue?vue&type=template&id=3eed9a51&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/app.vue?vue&type=template&id=3a8d23b8&lang.js","../../../home/runner/work/metastanza/metastanza/stanzas/column-tree/index.js"],"sourcesContent":["<template>\n  <div class=\"column\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"{ '-highlighted': node.id === state.highlightedNode }\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n      <span\n        class=\"content\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <span>{{ node.label }}</span>\n        <font-awesome-icon\n          v-if=\"hasChildren(node.children)\"\n          icon=\"chevron-right\"\n          class=\"icon\"\n        />\n      </span>\n    </span>\n  </div>\n</template>\n<script>\nimport { defineComponent, reactive } from \"vue\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faChevronRight);\n\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n\n  setup(props, context) {\n    const state = reactive({\n      highlightedNode: null,\n    });\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n    function resetHighlightedNode() {\n      state.highlightedNode = null;\n    }\n    function selectionClass(id) {\n      return id === state.selecedNode ? \"node -highlighted\" : \"\";\n    }\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n    function setParent(id) {\n      state.highlightedNode = id;\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      resetHighlightedNode,\n      hasChildren,\n      state,\n      selectionClass,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"column\">\n    <span\n      v-for=\"node in nodes\"\n      :key=\"node.id\"\n      class=\"node\"\n      :class=\"{ '-highlighted': node.id === state.highlightedNode }\"\n    >\n      <input\n        type=\"checkbox\"\n        :checked=\"checkedNodes.get(node.id)\"\n        @input=\"setCheckedNode(node)\"\n      />\n      <span\n        class=\"content\"\n        @click=\"hasChildren(node.children) ? setParent(node.id) : null\"\n      >\n        <span>{{ node.label }}</span>\n        <font-awesome-icon\n          v-if=\"hasChildren(node.children)\"\n          icon=\"chevron-right\"\n          class=\"icon\"\n        />\n      </span>\n    </span>\n  </div>\n</template>\n<script>\nimport { defineComponent, reactive } from \"vue\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faChevronRight);\n\nexport default defineComponent({\n  components: {\n    FontAwesomeIcon,\n  },\n  props: {\n    layer: {\n      type: Number,\n      default: 0,\n    },\n    nodes: {\n      type: Array,\n      default: () => [],\n    },\n    children: {\n      type: Boolean,\n      default: false,\n    },\n    checkedNodes: {\n      type: Map,\n      required: true,\n    },\n  },\n  emits: [\"setParent\", \"setCheckedNode\"],\n\n  setup(props, context) {\n    const state = reactive({\n      highlightedNode: null,\n    });\n    function hasChildren(childrenProp) {\n      if (typeof childrenProp === \"string\") {\n        childrenProp = childrenProp\n          .split(/,/)\n          .map(parseFloat)\n          .filter((prop) => !isNaN(prop));\n      }\n      return childrenProp && childrenProp.length > 0;\n    }\n    function resetHighlightedNode() {\n      state.highlightedNode = null;\n    }\n    function selectionClass(id) {\n      return id === state.selecedNode ? \"node -highlighted\" : \"\";\n    }\n    function setCheckedNode(node) {\n      context.emit(\"setCheckedNode\", node);\n    }\n    function setParent(id) {\n      state.highlightedNode = id;\n      context.emit(\"setParent\", [props.layer + 1, id]);\n    }\n    return {\n      setParent,\n      setCheckedNode,\n      resetHighlightedNode,\n      hasChildren,\n      state,\n      selectionClass,\n    };\n  },\n});\n</script>\n","/* eslint-disable vue/no-v-html */\n<template>\n  <section id=\"wrapper\">\n    <div\n      v-for=\"(column, index) of state.columnData\"\n      :key=\"index\"\n      class=\"container\"\n    >\n      <NodeColumn\n        v-if=\"column.length > 0\"\n        :ref=\"\n          (el) => {\n            layerRefs[index] = el;\n          }\n        \"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        @setParent=\"getChildNodes\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport { defineComponent, reactive, toRefs, watchEffect, ref } from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\n\nexport default defineComponent({\n  components: { NodeColumn },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n    });\n\n    watchEffect(\n      async () => {\n        state.responseJSON = null;\n        state.responseJSON = await loadData(\n          params.dataUrl.value,\n          params.dataType.value\n        );\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData.push(data.filter((obj) => isRootNode(obj.parent)));\n    });\n\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n\n    function resetHighlightedNodes() {\n      for (const [index, layer] of layerRefs.value.entries()) {\n        if (layer && index >= state.columnData.length - 1) {\n          layer.resetHighlightedNode();\n        }\n      }\n    }\n\n    function getChildNodes([layer, parentId]) {\n      const children = state.responseJSON.filter(\n        (node) => node.parent === parentId\n      );\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n\n      resetHighlightedNodes();\n\n      return children;\n    }\n\n    return {\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      getChildNodes,\n    };\n  },\n});\n</script>\n","/* eslint-disable vue/no-v-html */\n<template>\n  <section id=\"wrapper\">\n    <div\n      v-for=\"(column, index) of state.columnData\"\n      :key=\"index\"\n      class=\"container\"\n    >\n      <NodeColumn\n        v-if=\"column.length > 0\"\n        :ref=\"\n          (el) => {\n            layerRefs[index] = el;\n          }\n        \"\n        :nodes=\"column\"\n        :layer=\"index\"\n        :checked-nodes=\"state.checkedNodes\"\n        @setParent=\"getChildNodes\"\n        @setCheckedNode=\"updateCheckedNodes\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nimport { defineComponent, reactive, toRefs, watchEffect, ref } from \"vue\";\nimport loadData from \"togostanza-utils/load-data\";\nimport metadata from \"./metadata.json\";\nimport NodeColumn from \"./NodeColumn.vue\";\n\nfunction isRootNode(parent) {\n  return !parent || isNaN(parent);\n}\n\nexport default defineComponent({\n  components: { NodeColumn },\n  props: metadata[\"stanza:parameter\"].map((p) => p[\"stanza:key\"]),\n  emits: [\"resetHighlightedNode\"],\n\n  setup(params) {\n    params = toRefs(params);\n    const layerRefs = ref([]);\n    const state = reactive({\n      responseJSON: null,\n      columnData: [],\n      checkedNodes: new Map(),\n    });\n\n    watchEffect(\n      async () => {\n        state.responseJSON = null;\n        state.responseJSON = await loadData(\n          params.dataUrl.value,\n          params.dataType.value\n        );\n        state.checkedNodes = new Map();\n      },\n      { immediate: true }\n    );\n\n    watchEffect(() => {\n      const data = state.responseJSON || [];\n      state.columnData.push(data.filter((obj) => isRootNode(obj.parent)));\n    });\n\n    function updateCheckedNodes(node) {\n      const { id, ...obj } = node;\n      state.checkedNodes.has(id)\n        ? state.checkedNodes.delete(id)\n        : state.checkedNodes.set(id, { id, ...obj });\n      // TODO: add event handler\n      // console.log([...state.checkedNodes.values()]);\n    }\n\n    function resetHighlightedNodes() {\n      for (const [index, layer] of layerRefs.value.entries()) {\n        if (layer && index >= state.columnData.length - 1) {\n          layer.resetHighlightedNode();\n        }\n      }\n    }\n\n    function getChildNodes([layer, parentId]) {\n      const children = state.responseJSON.filter(\n        (node) => node.parent === parentId\n      );\n      const indexesToRemove = state.columnData.length - layer;\n      state.columnData.splice(layer, indexesToRemove, children);\n\n      resetHighlightedNodes();\n\n      return children;\n    }\n\n    return {\n      state,\n      layerRefs,\n      updateCheckedNodes,\n      getChildNodes,\n    };\n  },\n});\n</script>\n","import Stanza from \"togostanza/stanza\";\nimport { createApp } from \"vue\";\nimport App from \"./app.vue\";\nimport { appendCustomCss } from \"togostanza-utils\";\n\nexport default class ColumnTree extends Stanza {\n  async render() {\n    appendCustomCss(this, this.params[\"custom-css-url\"]);\n\n    const main = this.root.querySelector(\"main\");\n    main.parentNode.style.backgroundColor =\n      \"var(--togostanza-background-color)\";\n\n    this._app?.unmount();\n    this._app = createApp(App, this.params);\n    this._app.mount(main);\n  }\n}\n"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_createBlock","NodeColumn","_Fragment","App"],"mappings":"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"}