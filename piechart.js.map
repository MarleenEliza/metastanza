{"version":3,"file":"piechart.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/piechart/index.js"],"sourcesContent":["import vegaEmbed from \"vega-embed\";\n\nexport default async function piechart(stanza, params) {\n  const spec = await fetch(params[\"src-url\"]).then((res) => res.json());\n\n  //stanza（描画範囲）のwidth・height（うまく効かない…広くなってしまう？）\n  // spec.width = params[\"width\"]\n  // spec.height = params[\"height\"]\n  // spec.autosize = params[\"autosize\"]\n  spec.padding = { left: 5, top: 5, right: 150, bottom: 5 };\n\n  // scales: カラースキームを指定\n  spec.scales[0].range = [\n    \"var(--series-0-color)\",\n    \"var(--series-1-color)\",\n    \"var(--series-2-color)\",\n    \"var(--series-3-color)\",\n    \"var(--series-4-color)\",\n    \"var(--series-5-color)\",\n  ];\n\n  //円の描画について\n  //（デフォルトのコントローラを削除）\n  for (const signal of spec.signals) {\n    delete signal.bind;\n  }\n\n  spec.signals[2].value = params[\"inner-padding-angle\"];\n  spec.signals[3].value = params[\"inner-radius\"];\n\n  spec.marks[0].encode = {\n    enter: {\n      fill: { scale: \"color\", field: \"id\" },\n      x: { signal: \"width / 2\" },\n      y: { signal: \"height / 2\" },\n    },\n    update: {\n      startAngle: { field: \"startAngle\" },\n      endAngle: { field: \"endAngle\" },\n      padAngle: { signal: \"padAngle\" },\n      innerRadius: { signal: \"innerRadius\" },\n      outerRadius: { signal: \"width / 2\" },\n      cornerRadius: { signal: \"cornerRadius\" },\n      fill: { scale: \"color\", field: \"id\" },\n      stroke: { value: \"var(--stroke-color)\" },\n      strokeWidth: { value: \"var(--stroke-width)\" },\n    },\n    hover: {\n      fill: { value: \"var(--emphasized-color)\" },\n      stroke: { value: \"var(--hover-stroke-color)\" },\n      strokeWidth: { value: \"var(--hover-stroke-width)\" },\n    },\n  };\n\n  // // hover時にvalueを出したい\n  // spec.marks[1].encode = {\n  //   \"enter\": {\n  //     // \"align\": {\"value\": \"center\"},\n  //     // \"baseline\": {\"value\": \"bottom\"},\n  //     \"fill\": {\"value\": \"var(--emphasized-color)\"},\n  //     // \"font\":{\"value\": getComputedStyle(stanza.root.host).getPropertyValue(\"--label-font\")},\n  //     // \"fontSize\": {\"value\": getComputedStyle(stanza.root.host).getPropertyValue(\"--fontsize-of-value\")},\n  //     // \"fontWeight\": {\"value\": getComputedStyle(stanza.root.host).getPropertyValue(\"--fontweight-of-value\")}\n  //   },\n  //   \"update\": {\n  //     \"x\": {\"signal\": \"tooltip.category\", \"band\": 0.5},\n  //     \"y\": {\"signal\": \"tooltip.amount\", \"offset\": -1},\n  //     \"text\": {\"signal\": \"tooltip.id\"},\n  //     \"fillOpacity\": [\n  //       {\"test\": \"datum === tooltip\", \"value\": 0},\n  //       {\"value\": 1}\n  //     ]\n  //   }\n  // }\n\n  //legendを出す\n  spec.legends = [\n    {\n      fill: \"color\",\n      orient: \"none\",\n      legendX: \"220\",\n      legendY: \"5\",\n      title: params[\"legend-title\"],\n      titleColor: \"var(--legendtitle-color)\",\n      labelColor: \"var(--legendlabel-color)\",\n      encode: {\n        title: {\n          update: {\n            font: {\n              value: getComputedStyle(stanza.root.host).getPropertyValue(\n                \"--legend-font\"\n              ),\n            },\n            fontSize: {\n              value: getComputedStyle(stanza.root.host).getPropertyValue(\n                \"--legendtitle-size\"\n              ),\n            },\n            fontWeight: {\n              value: getComputedStyle(stanza.root.host).getPropertyValue(\n                \"--legendtitle-weight\"\n              ),\n            },\n          },\n        },\n        labels: {\n          interactive: true,\n          update: {\n            font: {\n              value: getComputedStyle(stanza.root.host).getPropertyValue(\n                \"--legend-font\"\n              ),\n            },\n            fontSize: {\n              value: getComputedStyle(stanza.root.host).getPropertyValue(\n                \"--legendlabel-size\"\n              ),\n            },\n          },\n          text: { field: \"value\" },\n        },\n      },\n    },\n  ];\n\n  const el = stanza.root.querySelector(\"main\");\n  const opts = {\n    renderer: \"svg\",\n  };\n  await vegaEmbed(el, spec, opts);\n}\n"],"names":["vegaEmbed"],"mappings":"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"}