{"version":3,"file":"region-geographic-map.js","sources":["../../../home/runner/work/metastanza/metastanza/stanzas/region-geographic-map/index.js"],"sourcesContent":["import Stanza from \"togostanza/stanza\";\nimport vegaEmbed from \"vega-embed\";\n\nexport default class regionGeographicMap extends Stanza {\n\n  async render() {\n    const vegaJson = await fetch(\n      \"https://vega.github.io/vega/examples/county-unemployment.vg.json\"\n    ).then((res) => res.json());\n\n    const data = [\n      {\n        name: \"unemp\",\n        url: \"https://vega.github.io/vega/data/unemployment.tsv\",\n        format: { type: \"tsv\", parse: \"auto\" },\n      },\n      {\n        name: \"counties\",\n        url: \"https://vega.github.io/vega/data/us-10m.json\",\n        format: { type: \"topojson\", feature: \"counties\" },\n        transform: [\n          {\n            type: \"lookup\",\n            from: \"unemp\",\n            key: \"id\",\n            fields: [\"id\"],\n            values: [\"rate\"],\n          },\n          { type: \"filter\", expr: \"datum.rate != null\" },\n        ],\n      },\n    ];\n\n    const projections = [\n      {\n        name: \"projection\",\n        type: \"albersUsa\",\n      },\n    ];\n\n    const colorRangeMax = [\n      \"var(--togostanza-series-0-color)\",\n      \"var(--togostanza-series-1-color)\",\n      \"var(--togostanza-series-2-color)\",\n      \"var(--togostanza-series-3-color)\",\n      \"var(--togostanza-series-4-color)\",\n      \"var(--togostanza-series-5-color)\",\n      \"var(--togostanza-series-6-color)\",\n      \"var(--togostanza-series-7-color)\",\n    ];\n\n    const colorRange =\n      colorRangeMax.slice(0, Number(this.params[\"group-amount\"]));\n\n    const scales = [\n      {\n        name: \"userColor\",\n        type: \"quantize\",\n        domain: [0, 0.15],\n        range: colorRange\n      },\n    ];\n\n    const legends = [\n      {\n        fill: \"userColor\",\n        orient: this.params[\"legend-orient\"],\n        title: this.params[\"legend-title\"],\n        titleColor: \"var(--togostanza-title-font-color)\",\n        titleFont: \"var(--togostanza-font-family)\",\n        titleFontWeight: \"var(--togostanza-title-font-weight)\",\n        format: \"0.1%\",\n      },\n    ];\n\n    const marks = [\n      {\n        type: \"shape\",\n        from: { data: \"counties\" },\n        encode: {\n          enter: { tooltip: { signal: \"format(datum.rate, '0.1%')\" } },\n          hover: {\n            fill: { value: \"var(--togostanza-hover-color)\" },\n          },\n          update: {\n            fill: { scale: \"userColor\", field: \"rate\" },\n            stroke: this.params[\"border\"]\n              ? { value: \"var(--togostanza-region-border-color)\" }\n              : \"\",\n          },\n        },\n        transform: [{ type: \"geoshape\", projection: \"projection\" }],\n      },\n    ];\n\n    const spec = {\n      $schema: \"https://vega.github.io/schema/vega/v5.json\",\n      width: 1000,\n      height: 500,\n      signals: vegaJson.signals,\n      data,\n      projections,\n      scales,\n      legends: this.params[\"legend\"] ? legends : [],\n      marks,\n    };\n\n    const el = this.root.querySelector(\"main\");\n    const opts = {\n      renderer: \"svg\",\n    };\n    await vegaEmbed(el, spec, opts);\n  }\n}"],"names":["vegaEmbed"],"mappings":"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"}